{"version":3,"sources":["components/Button/index.js","components/login/index.js","App.js","reportWebVitals.js","index.js"],"names":["Button","label","className","name","tabIndex","type","value","SingleSignOn","useState","error","setError","message","setMessage","setType","loginSchema","Yup","shape","phoneNumber","required","matches","formFieldsRegister","placeholder","id","formFieldsLogin","optFields","initialValues","validationSchema","onSubmit","values","actions","requestObj","meta","localStorage","getItem","axios","post","then","res","data","success","redirect","window","location","assign","console","log","catch","err","errors","touched","class","data-dismiss","map","item","htmlFor","style","color","queryClient","QueryClient","App","QueryClientProvider","client","Example","useQuery","get","JSON","stringify","setItem","ip","isLoading","isFetching","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAMeA,EAJA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OAAS,wBAAQC,UAAU,4CAA4CC,KAAK,SAASC,SAAU,EAAGC,KAAK,SAASC,MAAM,WAA7G,SAAyHL,K,iCCoOnHM,EAhOM,WACnB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,MAAjC,mBAAOH,EAAP,KAAaQ,EAAb,KACMC,EAAcC,MAAaC,MAAM,CACrCC,YAAaF,MACVG,SAAS,6BAA6BC,QAAQ,eAAgB,gDAG7DC,EAAqB,CAEzB,CACEjB,KAAM,cACNE,KAAM,OACNgB,YAAa,qBACbpB,MAAO,eACPqB,GAAI,eAGN,CACEnB,KAAM,WACNE,KAAM,OACNgB,YAAa,kBACbpB,MAAO,YACPqB,GAAI,YAIN,CACEnB,KAAM,QACNE,KAAM,QACNgB,YAAa,cACbpB,MAAO,wCACPqB,GAAI,UAOFC,EAAkB,CACtB,CACEpB,KAAM,cACNE,KAAM,OACNgB,YAAa,qBACbpB,MAAO,eACPqB,GAAI,gBAKFE,EAAY,CAAC,CAEfrB,KAAM,mBACNE,KAAM,OACNgB,YAAa,YACbpB,MAAO,YACPqB,GAAI,qBAuCR,OACE,qBAAKpB,UAAU,6BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAQoB,GAAG,QAA1B,UACE,+DACA,cAAC,IAAD,CACEG,cAAe,CACbR,YAAa,IAEfS,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GAGf,IAAMC,EAAU,2BACXF,GADW,IAEdG,KAAOC,aAAaC,QAAQ,OAAU,KAExCC,IACGC,KAnDJ,IAAV1B,EACM,2DAEI,IAAVA,EACM,8DAEF,8DA6C6BqB,GACnBM,MAAK,SAACC,GACL3B,EAAS2B,EAAIC,KAAKC,SAClB3B,EAAWyB,EAAIC,KAAK3B,SACpBE,EAAQwB,EAAIC,KAAKjC,MACdgC,EAAIC,KAAKE,UACV9B,EAAS,MAEc,IAAtB2B,EAAIC,KAAKE,UACV9B,EAAS,MAEa,sDAArB2B,EAAIC,KAAK3B,SACV8B,OAAOC,SAASC,OAAO,0BAEzBC,QAAQC,IAAI,MAAOR,MAEpBS,OAAM,SAACC,GACNH,QAAQC,IAAIE,EAAIpC,YAEpBiC,QAAQC,IAAIjB,IAhClB,SAoCG,gBAAGoB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,eAAC,IAAD,WACe,OAAZtC,GACC,sBAAKT,UAAS,gBApElB,YAATG,EACM,gBAEQ,SAATA,EACC,eAGA,gBA6DqB,sBAAd,UACE,wBAAQA,KAAK,SAAS6C,MAAM,QAAQC,eAAa,QAAjD,kBACCxC,KAGL,qBAAKT,UAAU,QAAf,uCACW,OAAVO,GACCc,EAAgB6B,KAAI,SAACC,GACnB,OACE,sBAAKnD,UAAU,aAAf,UACE,uBAAOoD,QAASD,EAAKpD,MAArB,SAA6BoD,EAAKpD,QAClC,cAAC,IAAD,CACEC,UAAU,uBACVoB,GAAI+B,EAAK/B,GACTnB,KAAMkD,EAAKlD,KACXkB,YAAagC,EAAKhC,YAClBjB,SAAU,EACVC,KAAMgD,EAAKhD,OAEZ2C,EAAOK,EAAKlD,OAAS8C,EAAQI,EAAKlD,MACjC,qBAAKoD,MAAO,CAAEC,MAAO,OAArB,SACGR,EAAOK,EAAKlD,QAEb,WAID,IAAVM,GACCW,EAAmBgC,KAAI,SAACC,GACtB,OACE,sBAAKnD,UAAU,aAAf,UACE,uBAAOoD,QAASD,EAAKpD,MAArB,SAA6BoD,EAAKpD,QAClC,cAAC,IAAD,CACEC,UAAU,uBACVoB,GAAI+B,EAAK/B,GACTnB,KAAMkD,EAAKlD,KACXkB,YAAagC,EAAKhC,YAClBjB,SAAU,EACVC,KAAMgD,EAAKhD,KACXa,UAAQ,IAET8B,EAAOK,EAAKlD,OAAS8C,EAAQI,EAAKlD,MACjC,qBAAKoD,MAAO,CAAEC,MAAO,OAArB,SACGR,EAAOK,EAAKlD,QAEb,WAID,IAAVM,GACCe,EAAU4B,KAAI,SAACC,GACb,OACE,sBAAKnD,UAAU,aAAf,UACE,uBAAOoD,QAASD,EAAKpD,MAArB,SAA6BoD,EAAKpD,QAClC,cAAC,IAAD,CACEC,UAAU,uBACVoB,GAAI+B,EAAK/B,GACTnB,KAAMkD,EAAKlD,KACXkB,YAAagC,EAAKhC,YAClBjB,SAAU,EACVC,KAAMgD,EAAKhD,KACXa,UAAQ,IAET8B,EAAOK,EAAKlD,OAAS8C,EAAQI,EAAKlD,MACjC,qBAAKoD,MAAO,CAAEC,MAAO,OAArB,SACGR,EAAOK,EAAKlD,QAEb,WAKZ,cAAC,EAAD,CAAQF,MAjIR,IAAVQ,EACK,WAES,IAAVA,EACC,aAGA,6BC9FPgD,EAAc,IAAIC,IAET,SAASC,IACtB,OACE,cAACC,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,SACE,cAACK,EAAD,MAKN,SAASA,IACP,MAA+CC,YAAS,YAAY,kBACpE7B,IAAM8B,IACJ,qCACA5B,MAAK,SAACC,GAAD,OAAS4B,KAAKC,UAAUlC,aAAamC,QAAQ,KAAM9B,EAAIC,KAAK8B,WAH3DC,EAAR,EAAQA,UAAW5D,EAAnB,EAAmBA,MAAnB,EAA0B6B,KAA1B,EAAgCgC,WAMlC,OAAID,EAAkB,sBAAMd,MAAO,CAACC,MAAO,SAArB,wBAElB/C,EAAc,0BAA4BA,EAAME,QAGlD,cAAC,EAAD,IC1BF,IAYe4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9cf2b8ec.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = ({label}) => {\nreturn ( <button className=\"btn btn-primary btn-primary-lg btn-block \" name=\"commit\" tabIndex={2} type=\"submit\" value=\"Continue\">{label}</button> );\n}\n \nexport default Button;","import React, { useState } from 'react';\nimport Input from '../Input';\nimport Button from '../Button';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst SingleSignOn = () => {\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [type, setType] = useState(null);\n  const loginSchema = Yup.object().shape({\n    phoneNumber: Yup.string()\n      .required('Please enter phone number').matches(/^[789]\\d{9}$/, \"Phone Number format should be (9882223456)\")\n  });\n\n  const formFieldsRegister = [\n   \n    {\n      name: 'phoneNumber',\n      type: 'text',\n      placeholder: 'Enter phone Number',\n      label: 'Phone Number',\n      id: 'phoneNumber'\n\n    },\n    {\n      name: 'fullName',\n      type: 'text',\n      placeholder: 'Enter Full Name',\n      label: 'Full Name',\n      id: 'fullName'\n\n    },\n\n    {\n      name: 'email',\n      type: 'email',\n      placeholder: 'Enter Email',\n      label: 'Enter your SSO name or Email address:',\n      id: 'email'\n\n    },\n    \n\n  ];\n\n  const formFieldsLogin = [\n    {\n      name: 'phoneNumber',\n      type: 'text',\n      placeholder: 'Enter phone Number',\n      label: 'Phone Number',\n      id: 'phoneNumber'\n\n    }\n  ]\n\n  const optFields = [{\n    \n      name: 'verificationCode',\n      type: 'text',\n      placeholder: 'Enter OTP',\n      label: 'Phone OTP',\n      id: 'verificationCode'\n\n    \n  }]\n\n \n  const getApiLink = () =>{\n    if(error === 0) {\n      return 'https://login.api.triloksecure.com/api/v1/users/register';\n    }\n    if(error === 1){\n      return 'https://login.api.triloksecure.com/api/v1/users/verify-code';   \n    }\n    return 'https://login.api.triloksecure.com/api/v1/users/verify-user';\n  }\n  const getAlertType = () => {\n    if(type === 'success') {\n      return 'alert-success'\n    } \n    else if(type === 'fail'){\n      return 'alert-danger'\n    }\n    else {\n      return 'alert-warning';\n    }\n  }\n  const getLabel = () => {  \n     if(error === 0){\n      return 'Register'\n    }\n    else if(error === 1){\n      return 'Verify OTP'\n    }\n    else {\n      return 'Continue';\n    }\n  }\n  \n\n  return (\n    <div className=\"page-wrap gradient-primary\">\n      <div className=\"container\">\n        <div className=\"content\">\n          <div className=\"panel\" id=\"login\">\n            <h3>Initiate Single Sign-on (SSO)</h3>\n            <Formik\n              initialValues={{\n                phoneNumber: \"\",\n              }}\n              validationSchema={loginSchema}\n              onSubmit={(values, actions) => {\n                // same shape as initial values\n            \n                  const requestObj = {\n                    ...values,\n                    meta: (localStorage.getItem('ip')) || '',\n                  };\n                  axios\n                    .post(getApiLink(), requestObj)\n                    .then((res) => {\n                      setError(res.data.success);\n                      setMessage(res.data.message);\n                      setType(res.data.type);\n                      if(res.data.redirect) {                        \n                        setError(null);\n                      }\n                      if(res.data.redirect === 2) {\n                        setError(null);\n                      }\n                      if(res.data.message === 'Code is verified!, You are loggedIn successfully!') {\n                        window.location.assign('https://www.tigon.one/');\n                      }\n                      console.log('res', res);\n                    })\n                    .catch((err) => {\n                      console.log(err.message);\n                    });\n                  console.log(values);\n                \n              }}\n            >\n              {({ errors, touched }) => (\n                <Form>\n                  {message !== null && (\n                    <div className={`alert ${getAlertType()} alert-dismissible`}>\n                      <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n                      {message}\n                    </div>\n                  )}\n                  <div className=\"alert\">Please fill your details:</div>\n                  {error === null &&\n                    formFieldsLogin.map((item) => {\n                      return (\n                        <div className=\"form-group\">\n                          <label htmlFor={item.label}>{item.label}</label>\n                          <Field\n                            className=\"form-control no-icon\"\n                            id={item.id}\n                            name={item.name}\n                            placeholder={item.placeholder}\n                            tabIndex={1}\n                            type={item.type}\n                          />\n                          {errors[item.name] && touched[item.name] ? (\n                            <div style={{ color: \"red\" }}>\n                              {errors[item.name]}\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    })}\n                  {error === 0 &&\n                    formFieldsRegister.map((item) => {\n                      return (\n                        <div className=\"form-group\">\n                          <label htmlFor={item.label}>{item.label}</label>\n                          <Field\n                            className=\"form-control no-icon\"\n                            id={item.id}\n                            name={item.name}\n                            placeholder={item.placeholder}\n                            tabIndex={1}\n                            type={item.type}\n                            required\n                          />\n                          {errors[item.name] && touched[item.name] ? (\n                            <div style={{ color: \"red\" }}>\n                              {errors[item.name]}\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    })}\n                  {error === 1 &&\n                    optFields.map((item) => {\n                      return (\n                        <div className=\"form-group\">\n                          <label htmlFor={item.label}>{item.label}</label>\n                          <Field\n                            className=\"form-control no-icon\"\n                            id={item.id}\n                            name={item.name}\n                            placeholder={item.placeholder}\n                            tabIndex={1}\n                            type={item.type}\n                            required\n                          />\n                          {errors[item.name] && touched[item.name] ? (\n                            <div style={{ color: \"red\" }}>\n                              {errors[item.name]}\n                            </div>\n                          ) : null}\n                        </div>\n                      );\n                    })\n                    }\n                  <Button label={getLabel()} />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SingleSignOn;","import './App.css';\nimport { QueryClient, QueryClientProvider, useQuery } from \"react-query\";\nimport SingleSignOn from './components/login';\nimport axios from 'axios';\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Example />\n    </QueryClientProvider>\n  );\n}\n\nfunction Example() {\n  const { isLoading, error, data, isFetching } = useQuery(\"repoData\", () =>\n  axios.get(\n    \"https://api.ipify.org?format=json\"\n  ).then((res) => JSON.stringify(localStorage.setItem('ip', res.data.ip)))\n);\n\nif (isLoading) return <span style={{color: 'white'}}>Loading...</span>;\n\nif (error) return \"An error has occurred: \" + error.message;\n\nreturn (\n  <SingleSignOn />\n);\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/css/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}